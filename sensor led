// Proyecto Digital - Parte A y B
// A: Leer LM35 solo cuando presiono un botón (idéntico a Parte A)
// B: Semáforo de temperatura con 3 LEDs por PWM

#include <Arduino.h>

// 1) PINES (mismos nombres que Parte A donde aplica)
#define PIN_SENSOR   34   // LM35 conectado al pin 34
#define PIN_BOTON    15   // Botón en pin 15
#define PIN_ROJO     19
#define PIN_VERDE    23
#define PIN_AMARILLO 21

// 2) PWM (sin cambiar nombres del sensor/botón)
#define canalrojo      8
#define canalverde     9
#define canalamarillo 10
#define freqPWM       50
#define resPWM        10   // 10 bits => 0..1023

// 3) VARIABLES (exactamente como Parte A para el botón)
bool botonPresionado = false;  // MISMO NOMBRE Y TIPO QUE EN PARTE A

// 4) ISR (exacta en lógica: solo marca el flag)
void IRAM_ATTR botonISR() {
  botonPresionado = true; // cuando presiono el botón marco mi evento
}

// 5) Inicializar LEDs (PWM)
void initLeds() {
  ledcSetup(canalrojo, freqPWM, resPWM);
  ledcAttachPin(PIN_ROJO, canalrojo);
  ledcWrite(canalrojo, 0);

  ledcSetup(canalverde, freqPWM, resPWM);
  ledcAttachPin(PIN_VERDE, canalverde);
  ledcWrite(canalverde, 0);

  ledcSetup(canalamarillo, freqPWM, resPWM);
  ledcAttachPin(PIN_AMARILLO, canalamarillo);
  ledcWrite(canalamarillo, 0);
}

// 6) Semáforo de temperatura (no toca la lectura; solo actúa con el valor obtenido)
void semaforoTemperatura(float t) {
  if (t < 22.0) {
    ledcWrite(canalverde, 1023);
    ledcWrite(canalamarillo, 0);
    ledcWrite(canalrojo, 0);
    Serial.println("Estado: VERDE (t < 22.0 °C)");
  } else if (t >= 22.0 && t < 25.0) {
    ledcWrite(canalverde, 0);
    ledcWrite(canalamarillo, 1023);
    ledcWrite(canalrojo, 0);
    Serial.println("Estado: AMARILLO (22.0 °C <= t < 25.0 °C)");
  } else {
    ledcWrite(canalverde, 0);
    ledcWrite(canalamarillo, 0);
    ledcWrite(canalrojo, 1023);
    Serial.println("Estado: ROJO (t >= 25.0 °C)");
  }
}

// 7) Setup (idéntico en esencia: serial, pines, attachInterrupt y mensaje)
void setup() {
  Serial.begin(115200);               // comunicación serial
  pinMode(PIN_SENSOR, INPUT);         // pin del sensor como entrada
  pinMode(PIN_BOTON, INPUT_PULLUP);   // botón con resistencia interna
  attachInterrupt(PIN_BOTON, botonISR, FALLING); // interrupción al presionar

  initLeds();
  Serial.println("Listo: Presiona el botón para leer la temperatura.");
}

// 8) Loop (LECTURA DEL SENSOR = IGUALITA A PARTE A)
void loop() {
  if (botonPresionado) {
    botonPresionado = false; // limpio el evento

    // —— BLOQUE IDÉNTICO A PARTE A ——
    unsigned int lectura = analogRead(PIN_SENSOR);     // leo el ADC (0-4095)
    float voltaje = lectura * (5 / 4095.0);            // paso a voltios (MISMA FÓRMULA QUE PARTE A)
    float temperatura = voltaje * 100.0;               // LM35: 10mV = 1°C (MISMA FÓRMULA)
    Serial.print("Temperatura: ");
    Serial.print(temperatura);
    Serial.println(" °C");
    // ————————————————

    // Semáforo (usa la temperatura ya calculada sin tocar la lógica del sensor)
    semaforoTemperatura(temperatura);
  }

  // Pequeña pausa opcional
  delay(1);
}
